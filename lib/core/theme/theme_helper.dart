import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:get/get_core/src/get_main.dart';
import 'package:volunteers_yemen/core/theme/colors.dart';
import 'package:volunteers_yemen/core/theme/pallete.dart';
import 'package:volunteers_yemen/core/utils/size_utils.dart';

class AppTheme {
  static ThemeData darkTheme = ThemeData.dark(useMaterial3: true).copyWith(
      backgroundColor: Color(0xff050C13),
      scaffoldBackgroundColor: Color(0xff050C13),
      colorScheme: const ColorScheme(
        brightness: Brightness.dark,
        primary: PalleteDark.primaryColor,
        onPrimary: PalleteDark.secondaryColor,
        secondary: Color(0xffCD7F32),
        onSecondary: PalleteLight.secondaryColor,
        error: PalleteLight.primaryColor,
        onError: PalleteLight.secondaryColor,
        background: Colors.white30,
        onBackground: Color.fromARGB(255, 9, 23, 36),
        surface: Colors.black54,
        onSurface: PalleteLight.gradiantToColor,
        tertiaryContainer: Color(0xff050C13),
        onTertiaryContainer: Color.fromARGB(255, 10, 22, 34),
      ),
      textTheme: textTheme);

  static ThemeData lightTheme = ThemeData.dark(useMaterial3: true).copyWith(
      backgroundColor: Colors.white,
      scaffoldBackgroundColor: Colors.white,
      colorScheme: const ColorScheme(
        brightness: Brightness.light,
        primary: PalleteLight.primaryColor,
        onPrimary: PalleteLight.secondaryColor,
        secondary: Color(0xffCD7F32),
        onSecondary: PalleteDark.secondaryColor,
        error: PalleteDark.primaryColor,
        onError: PalleteDark.secondaryColor,
        background: PalleteLight.secondaryColor,
        onBackground: PalleteLight.secondaryColor,
        surface: Color(0xffcbc0d3),
        onSurface: Colors.black12,
        tertiaryContainer: Colors.white,
        onTertiaryContainer: Color.fromARGB(255, 228, 228, 228),
      ),
      textTheme: textTheme);

  static TextTheme get textTheme => TextTheme(
      bodyLarge: TextStyle(
        color: appTheme.gray100,
        fontSize: 16.fSize,
        fontFamily: 'Gilroy-SemiBold',
        fontWeight: FontWeight.w400,
      ),
      bodyMedium: TextStyle(
        color: appTheme.gray50001,
        fontSize: 12.fSize,
        fontFamily: 'Inter',
        fontWeight: FontWeight.w400,
      ),
      bodySmall: TextStyle(
        color: appTheme.cyan400,
        fontSize: 12.fSize,
        fontFamily: 'Roboto',
        fontWeight: FontWeight.w400,
      ),
      headlineMedium: TextStyle(
        color: appTheme.cyan400,
        fontSize: 28.fSize,
        fontFamily: 'Gilroy-SemiBold',
        fontWeight: FontWeight.w400,
      ),
      titleLarge: TextStyle(
        color: appTheme.cyan400,
        fontSize: 19.fSize,
        fontFamily: 'Inter',
        fontWeight: FontWeight.w700,
      ),
      titleMedium: TextStyle(
        fontSize: 18.fSize,
        fontFamily: 'Inter',
        fontWeight: FontWeight.w700,
      ),
      titleSmall: TextStyle(
        color: Color(0XFF0174CC),
        fontSize: 11.fSize,
        fontFamily: 'Inter',
        fontWeight: FontWeight.w500,
      ));

  PrimaryColors getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    return PrimaryColors();
  }

  void switchTheme(bool status) {}
}

PrimaryColors get appTheme => AppTheme().getThemeColors();
